'fileTypes': [
  'fbs'
]
'name': 'Flatbuffers schema'
'patterns': [
  {
    'include' : '#line-comment'
  },
  {
    'include' : '#block-comment'
  },
  {
    'include' : '#base-keywords'
  },
  {
    'include' : '#string'
  },
  {
    'include' : '#namespace-decl'
  },
  {
    'include' : '#attribute-decl'
  },
  {
    'include' : '#enum-decl'
  }
]
'repository':
  'line-comment':
    {
      'begin': '(?=//)'
      'end': '\\n'
      'name': 'comment.line.double-slash.flatbuffers'
      # documentation
      'patterns': [
        {
          'begin': '(?<!/)(?=///[^/])'
          'end': '(?=\\n)'
          'name': 'meta.documentation.flatbuffers'
        }
      ]
    }
  'block-comment':
    {
      'begin': '(?=/\\*)'
      'end': '(?<!/)\\*/'
      'name': 'comment.block.flatbuffers'
    }
  'base-keywords':
    {
      'match': '\\b(namespace|attribute|enum|struct|table|root_type|union)\\b'
      'name':  'keyword.control.flatbuffers'
    }
  'escape-chars':
    {
      'match': '\\\\(?:[\'"\\?\\\\abfnrtv]|[0-7]{1,3}|x[\\da-fA-F]+|u[\\da-fA-F]{4}|U[\\da-fA-F]{8})'
      'name':  'constant.character.escape.cpp'
    }
  'invalid-escape-chars':
    {
      'match': '\\\\(?:[^\'"\\?\\\\abfnrtvxuU0-7]|x[^\\da-fA-F]|u[\\da-fA-F]{0,3}[^\\da-fA-F]|U[\\da-fA-F]{0,7}[^\\da-fA-F])'
      'name':  'invalid.illegal.unknown-escape.cpp'
    }
  'string':
    {
      'begin': '"'
      'beginCaptures':
        '0':
          'name':'punctuation.definition.string.begin.cpp'
      'end': '"'
      'endCaptures':
        '0':
          'name':'punctuation.definition.string.end.cpp'
      'name': 'string.quoted.double.cpp'
      'patterns': [
          {
            'include': '#escape-chars'
          },
          {
            'include': '#invalid-escape-chars'
          }
        ]
    }
  'only-comments':
    {
      'patterns': [
        {
          'include' : '#line-comment'
        },
        {
          'include' : '#block-comment'
        },
        {
          'match':  '\\S'
          'name':   'invalid.illegal.flatbuffers'
        }
      ]
    }
  'namespace-decl':
    {
      'begin':  '(?<=namespace)'
      'end':    '(?=;)'
      'patterns': [
        {
          'match':  '\\s+([_a-zA-Z]\\w*)(\\s*\\.\\s*([_a-zA-Z]\\w*))*\\s*'
          'captures':
            '0':
              'patterns': [
                {
                  'match':  '[_a-zA-Z]\\w*'
                  'name':   'entity.name.type.flatbuffers'
                }
              ]
        },
        {
          'match':  '[^;]+'
          'name':   'invalid.illegal.flatbuffers'
        }
      ]
    }
  'attribute-decl':
    {
      'begin':  '(?<=attribute)'
      'end':    '(?=;)'
      'patterns': [
        {
          'include': '#string'
        },
        {
          'match':  '[^";\\s]+'
          'name':   'invalid.illegal.flatbuffers'
        }
      ]
    }
  'enum-decl':
    {
      'begin':  '(?<=enum|union)([^_a-zA-Z:{]*)([_a-zA-Z]\\w*)?([^_a-zA-Z:{]*)(:)?([^_a-zA-Z:{]*)([_a-zA-Z]\\w*)?([^{]*){'
      'beginCaptures':
        '1':
          'patterns': [{ 'include':  '#only-comments' }]
        '2':
          'name': 'entity.name.type.flatbuffers'
        '3':
          'patterns': [{ 'include':  '#only-comments' }]
        '5':
          'patterns': [{ 'include':  '#only-comments' }]
        '6':
          'name': 'entity.name.type.flatbuffers'
        '7':
          'patterns': [{ 'include':  '#only-comments' }]

      'end':    '(?=})'
      'patterns': [
        {
          'match':  '[_a-zA-Z]\\w*'
          'name':   'entity.name.type.flatbuffers'
        },
        {
          'match':  '\\d+(?=\\W)'
          'name':   'constant.numeric.flatbuffers'
        },
        {
          'match':  '[^},=\\s]+'
          'name':   'invalid.illegal.flatbuffers'
        }
      ]
    }
'scopeName': 'source.flatbuffers'
